apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "4"
    image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"springboot-s2i:latest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"springboot-s2i\")].image"}]'
    openshift.io/generated-by: OpenShiftNewApp
  creationTimestamp: "2024-03-15T16:15:16Z"
  generation: 4
  labels:
    app: springboot-s2i
    app.kubernetes.io/component: springboot-s2i
    app.kubernetes.io/instance: springboot-s2i
    app.kubernetes.io/name: java
  name: springboot-s2i
  namespace: arij-project
  resourceVersion: "10939584"
  uid: 4af14a1d-6b80-43fb-bdef-bdd9a657bb83
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      deployment: springboot-s2i
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        openshift.io/generated-by: OpenShiftNewApp
      creationTimestamp: null
      labels:
        deployment: springboot-s2i
    spec:
      containers:
      - env:
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              key: db-username
              name: app-secrets
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: db-password
              name: app-secrets
        - name: APP_PROFILE
          valueFrom:
            configMapKeyRef:
              key: app-profile
              name: app-configmap
        - name: DB_URL
          valueFrom:
            configMapKeyRef:
              key: db-url
              name: app-configmap
        image: image-registry.openshift-image-registry.svc:5000/arij-project/springboot-s2i@sha256:352ef9d3eac73c26e341733e81a7191f1cbb028360c9d88104a1281989cb0ae2
        imagePullPolicy: IfNotPresent
        name: springboot-s2i
        ports:
        - containerPort: 8443
          protocol: TCP
        - containerPort: 8080
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

